[buildout]
parts =
    gae_sdk
    app_lib
    gae_tools
    local-eggs
    omelette
    test

develop-eggs-directory = develop
unzip = true
prefer-final = true

[app_lib]
# Sets the library dependencies for the app.
recipe = appfy.recipe.gae:app_lib
lib-directory = app/distlib
use-zipimport = false

# Define the libraries.
eggs =
    flask
    Flask-WTF

# Don't copy files that match these glob patterns.
ignore-globs =
    *.c
    *.pyc
    *.pyo
    */test
    */tests
    */testsuite

# Don't install these packages or modules.
ignore-packages =
    distribute
    setuptools
    easy_install
    site
#     pkg_resources
    ssl

[gae_sdk]
# Dowloads and extracts the App Engine SDK.
recipe = appfy.recipe.gae:sdk
url = http://googleappengine.googlecode.com/files/google_appengine_1.5.2.zip
destination = ${buildout:parts-directory}
hash-name = false
clear-destination = true

[gae_tools]
# Installs appcfg, dev_appserver and python executables in the bin directory.
recipe = appfy.recipe.gae:tools
# Add these paths to sys.path in the generated scripts.
extra-paths =
    app
    app/lib
    app/distlib
    app/blueprints
sdk-directory = ${gae_sdk:destination}/google_appengine

[omelette]
recipe = collective.recipe.omelette
eggs = ${local-eggs:eggs}
location = develop

[local-eggs]
recipe = zc.recipe.egg
#find-links =
eggs =
    Sphinx
    PyYAML
    webtest

[test]
recipe = pbp.recipe.noserunner
eggs =
    nose
    nosegae
    nose-pudb
#   ${gae_sdk:destination}/google_appengine
extra-paths =
    test
#     develop
    ${gae_tools:extra-paths}
environment = nose-environment
defaults =
    --gae-application=${buildout:directory}/app
    --gae-lib-root=${buildout:directory}/parts/google_appengine

[nose-environment]
NOSE_WITH_GAE = true
NOSE_WHERE = ${buildout:directory}/test

